import { Elysia } from 'elysia';
import { db, schema } from './db'; // роиро╛роорпН рокроЯро┐ 4-ро▓рпН роЙро░рпБро╡ро╛роХрпНроХро┐роп DB роЗрогрпИрокрпНрокрпБ рооро▒рпНро▒рпБроорпН ро╕рпНроХрпАрооро╛
import { authController } from './controllers/auth.controller';

const app = new Elysia()
    /**
     * роЗродрпБродро╛ройрпН роЪро░ро┐ропро╛рой "latest docs" роорпБро▒рпИ.
     * рокро┐ро│роХро┐ройрпН родрпЗро╡рпИропро┐ро▓рпНро▓рпИ. роироородрпБ db роЗрогрпИрокрпНрокрпИ Elysia-ро╡ро┐ройрпН context-ро▓рпН роирпЗро░роЯро┐ропро╛роХ 'decorate' роЪрпЖропрпНроХро┐ро▒рпЛроорпН.
     * роЗродрпБ роЕройрпИродрпНродрпБ ро╡ро┤ро┐роХро│ро┐ро▓рпБроорпН (routes) 'db' рооро▒рпНро▒рпБроорпН 'schema'-ро╡рпИ роХро┐роЯрпИроХрпНроХроЪрпН роЪрпЖропрпНропрпБроорпН.
     */
    .decorate({ db })
    .decorate({ schema })

    // Auth Controller-роР роЗроЩрпНроХрпЗ роЗрогрпИроХрпНроХро╡рпБроорпН
    .use(authController) // <-- /auth/signup ро╡ро┤ро┐ропрпИ роЗродрпБ роЪрпЗро░рпНроХрпНроХрпБроорпН

    // роЪро░рпНро╡ро░рпН рооро▒рпНро▒рпБроорпН DB роЗрогрпИрокрпНрокрпИ роЪрпЛродро┐родрпНродро▓рпН
    .get('/', async ({ db }) => {
        // роЗрокрпНрокрпЛродрпБ 'db' context-ро▓рпН роХро┐роЯрпИроХрпНроХро┐ро▒родрпБ!
        // роиро╛роорпН db.query.platformUsers... роОройрпНро▒рпБ роирпЗро░роЯро┐ропро╛роХ ро╡ро┐ройро╡ро▓ро╛роорпН.
        try {
            await db.query.platformUsers.findFirst(); // DB-роР ро╡ро┐ройро╡ роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН
            return { status: 'Server Running', db_status: 'Connected' };
        } catch (e: any) {
            return { status: 'Server Running', db_status: 'Connection Failed', error: e.message };
        }
    })
  
    .listen(3000);

console.log(
  `ЁЯжК Elysia роЪро░рпНро╡ро░рпН http://${app.server?.hostname}:${app.server?.port} -ро▓рпН роЗропроЩрпНроХрпБроХро┐ро▒родрпБ`
);